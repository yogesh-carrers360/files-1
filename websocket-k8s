How to Implement websockets in kubernetes
1. ingress.yaml:  
annotations: ( Can be passed through values.yaml )
  nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
  nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
  nginx.org/websocket-services: "gateway-cluster-ip-service"
  nginx.ingress.kubernetes.io/server-snippets: |
    location / {
      proxy_set_header Upgrade $http_upgrade;
      proxy_http_version 1.1;
      proxy_set_header Upgrade "websocket";
      proxy_set_header X-Forwarded-Host $http_host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header Connection "upgrade";
      proxy_cache_bypass $http_upgrade;
      }
  - path: /path-to-service  ( to be passed in ingress.yaml file inside templates folder if using helm chart )
        pathType: ImplementationSpecific
        backend:
          service:
            name: <service-name>
            port:
              number: <websocket-port>
2. service.yaml:
spec:
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 30
3. use websocket client to check the connection:
- For unsecure connection: ws://<domain-name>/path
- For secure connections: wss://<domain-name>/path
